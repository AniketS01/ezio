import React, { useState, useEffect } from 'react';
import { Loader, Card, FormField } from '../components';

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchedText, setSearchedText] = useState('');
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  const RenderCards = ({ data, title }) => {
    if (data?.length > 0)
      return data.map((post) => <Card key={post._id} {...post} />);

    return <h2 className='mt-5 font-bold text-gray-500'>{title}</h2>;
  };

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const res = await fetch('https://ezio.onrender.com/api/post', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        });
        if (res.ok) {
          const result = await res.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error.message);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleSearch = (e) => {
    clearTimeout(searchTimeout);
    setSearchedText(e.target.value);
    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchedText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchedText.toLowerCase())
        );
        setSearchedResults(searchResults);
      }, 500)
    );
  };

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-black text-[32px]'>
          Community Showcase
        </h1>
        <p className='mt-2 text-gray-500 text-[17px] max-w-[500px]'>
          Browse through visually stunning images generated by ezio
        </p>
      </div>
      <div className='mt-16'>
        <FormField
          lableName='search post'
          type='text'
          name='text'
          placeHolder='Search posts'
          value={searchedText}
          handleChange={handleSearch}
        />
      </div>

      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchedText && (
              <h2 className='font-medium text-gray-500 text-xl mb-3'>
                Showing result for{' '}
                <span className='text-black'>{searchedText}</span>
              </h2>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
              {searchedText ? (
                <RenderCards
                  data={searchedResults}
                  title='No search results found'
                />
              ) : (
                <RenderCards data={allPosts} title='No results Found' />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
